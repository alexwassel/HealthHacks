{"ast":null,"code":"var _jsxFileName = \"/Users/alexwassel/Desktop/HealthHacks/src/Pages/SignIn.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { signInWithGoogle } from \"../firebase\";\nimport { auth } from \"../firebase\";\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport './SignIn.css';\nimport StyledButton from \"../Component/StyledButton\";\n\nconst SignIn = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isEmailMethod, setEmailMethod] = useState(false);\n\n  const signInWithEmailAndPasswordHandler = (event, email, password) => {\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email, password).catch(error => {\n      ToastsStore.error(\"Error signing in\", 5000);\n      console.error(\"Error signing in with password and email\", error);\n    });\n  };\n\n  const onChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n\n    if (name === 'userEmail') {\n      setEmail(value);\n    } else if (name === 'userPassword') {\n      setPassword(value);\n    } else if (name === 'changeMethod') {\n      setEmailMethod(value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/pages/login.png\",\n    className: \"background-image\",\n    alt: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ToastsContainer, {\n    store: ToastsStore,\n    position: ToastsContainerPosition.TOP_RIGHT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"login-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      height: '10vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), isEmailMethod ? /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      marginTop: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      'align-items': 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userEmail\",\n    className: \"signin-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Email: \\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"userEmail\",\n    value: email,\n    placeholder: \"E.g: example@example.com\",\n    id: \"userEmail\",\n    onChange: event => onChangeHandler(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userPassword\",\n    className: \"pwd-for\",\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Password: \\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"userPassword\",\n    value: password,\n    placeholder: \"Your Password\",\n    id: \"userPassword\",\n    onChange: event => onChangeHandler(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"email-signin\",\n    onClick: event => {\n      signInWithEmailAndPasswordHandler(event, email, password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Sign in\")) : /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: () => {\n      onChangeHandler({\n        currentTarget: {\n          name: 'changeMethod',\n          value: true\n        }\n      });\n    },\n    style: {\n      marginBottom: '5vh',\n      color: \"white\",\n      backgroundColor: \"#ff443a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Email Login\"), isEmailMethod ? null : /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: () => {\n      signInWithGoogle();\n    },\n    style: {\n      marginBottom: '5vh',\n      color: \"white\",\n      backgroundColor: \"#af256e\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Google Login\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      height: '10vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }));\n};\n\nfunction getSpacerHeight() {}\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/alexwassel/Desktop/HealthHacks/src/Pages/SignIn.js"],"names":["React","useState","Link","signInWithGoogle","auth","ToastsContainer","ToastsStore","ToastsContainerPosition","StyledButton","SignIn","email","setEmail","password","setPassword","isEmailMethod","setEmailMethod","signInWithEmailAndPasswordHandler","event","preventDefault","signInWithEmailAndPassword","catch","error","console","onChangeHandler","name","value","currentTarget","TOP_RIGHT","height","marginTop","display","flexDirection","color","marginBottom","backgroundColor","getSpacerHeight"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Link} from \"@reach/router\";\nimport {signInWithGoogle} from \"../firebase\";\nimport {auth} from \"../firebase\";\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\nimport './SignIn.css'\nimport StyledButton from \"../Component/StyledButton\";\n\nconst SignIn = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [isEmailMethod, setEmailMethod] = useState(false);\n\n    const signInWithEmailAndPasswordHandler = (event, email, password) => {\n        event.preventDefault();\n        auth.signInWithEmailAndPassword(email, password).catch(error => {\n            ToastsStore.error(\"Error signing in\", 5000);\n            console.error(\"Error signing in with password and email\", error);\n        });\n    };\n\n    const onChangeHandler = (event) => {\n        const {name, value} = event.currentTarget;\n        if (name === 'userEmail') {\n            setEmail(value);\n        } else if (name === 'userPassword') {\n            setPassword(value);\n        } else if (name === 'changeMethod') {\n            setEmailMethod(value);\n        }\n    };\n\n\n    return (\n        <div className=\"container justify-content-center\">\n            <img src='/pages/login.png' className=\"background-image\" alt=\"login\"/>\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT}/>\n            <span className=\"login-logo\">Log In</span>\n            <span style={{height: '10vh'}}/>\n            {\n                isEmailMethod ?\n                    <form style={{marginTop: 0, display: 'flex', flexDirection: 'column', 'align-items': 'center'}}>\n                        <label htmlFor=\"userEmail\" className=\"signin-email\">\n                            Email: &nbsp;&nbsp;\n                        </label>\n                        <input\n                            type=\"email\"\n                            name=\"userEmail\"\n                            value={email}\n                            placeholder=\"E.g: example@example.com\"\n                            id=\"userEmail\"\n                            onChange={(event) => onChangeHandler(event)}\n                        />\n                        < br/>\n                        <label htmlFor=\"userPassword\" className=\"pwd-for\" style={{color:'#fff'}}>\n                            Password: &nbsp;&nbsp;\n                        </label>\n                        <input\n                            type=\"password\"\n\n                            name=\"userPassword\"\n                            value={password}\n                            placeholder=\"Your Password\"\n                            id=\"userPassword\"\n                            onChange={(event) => onChangeHandler(event)}\n                        />\n                        <br/>\n                        <button className=\"email-signin\"\n                                onClick={(event) => {\n                                    signInWithEmailAndPasswordHandler(event, email, password)\n                                }}>\n                            Sign in\n                        </button>\n                    </form>\n                    :\n                    <StyledButton\n                        onClick={() => {\n                            onChangeHandler({currentTarget: {name: 'changeMethod', value: true}})\n                        }}\n                        style={{marginBottom: '5vh', color: \"white\", backgroundColor: \"#ff443a\"}}>\n                        Email Login\n                    </StyledButton>\n            }\n            {\n                isEmailMethod ?\n                    null\n                    :\n                    <StyledButton\n                        onClick={() => {\n                            signInWithGoogle();\n                        }}\n                        style={{marginBottom: '5vh', color: \"white\", backgroundColor: \"#af256e\"}}>Google\n                        Login\n                    </StyledButton>\n            }\n\n            <span style={{height: '10vh'}}/>\n        </div>\n    );\n};\nfunction getSpacerHeight() {\n\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}