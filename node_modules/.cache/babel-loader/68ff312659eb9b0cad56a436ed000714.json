{"ast":null,"code":"var _jsxFileName = \"/Users/alexwassel/Desktop/HealthHacks/src/Pages/SignUp.js\";\nimport React, { useContext, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport { Link } from \"@reach/router\";\nimport { auth, signInWithGoogle, generateUserDocument } from \"../firebase\";\nimport './SignUp.css';\nimport setBackgroundColor from \"../utils/setBackground\";\nimport * as colors from \"../colors\";\n\nconst SignUp = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const createUserWithEmailAndPasswordHandler = async (event, email, password) => {\n    event.preventDefault();\n\n    try {\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, password);\n      generateUserDocument(user, {\n        displayName\n      });\n    } catch (error) {\n      setError('Error Signing up with email and password');\n    }\n\n    setEmail(\"\");\n    setPassword(\"\");\n    setDisplayName(\"\");\n  };\n\n  const onChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n\n    if (name === \"userEmail\") {\n      setEmail(value);\n    } else if (name === \"userPassword\") {\n      setPassword(value);\n    } else if (name === \"displayName\") {\n      setDisplayName(value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/pages/signup.png\",\n    className: \"background-image\",\n    alt: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: '#fff',\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, error !== null && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"displayName\",\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Display Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      margin: 10\n    },\n    name: \"displayName\",\n    value: displayName,\n    placeholder: \"E.g: Johnny\",\n    id: \"displayName\",\n    onChange: event => onChangeHandler(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userEmail\",\n    className: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 22\n    }\n  }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      margin: 10\n    },\n    type: \"email\",\n    name: \"userEmail\",\n    value: email,\n    placeholder: \"E.g: example@example.com\",\n    id: \"userEmail\",\n    onChange: event => onChangeHandler(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userPassword\",\n    className: \"pwd\",\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      margin: 10\n    },\n    type: \"password\",\n    name: \"userPassword\",\n    value: password,\n    placeholder: \"Your Password\",\n    id: \"userPassword\",\n    onChange: event => onChangeHandler(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"signup-button\",\n    onClick: event => {\n      createUserWithEmailAndPasswordHandler(event, email, password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Sign up\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\",\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Or if you have a Google Email Account...\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginLeft: 90\n    },\n    onClick: () => {\n      try {\n        signInWithGoogle();\n      } catch (error) {\n        console.error(\"Error signing in with Google\", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Sign In with Google\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Already have an account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/signIn\",\n    onClick: setBackgroundColor(colors.USER_COLOR),\n    style: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Sign in here\"), \" \")));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/alexwassel/Desktop/HealthHacks/src/Pages/SignUp.js"],"names":["React","useContext","useState","render","Link","auth","signInWithGoogle","generateUserDocument","setBackgroundColor","colors","SignUp","email","setEmail","password","setPassword","displayName","setDisplayName","error","setError","createUserWithEmailAndPasswordHandler","event","preventDefault","user","createUserWithEmailAndPassword","onChangeHandler","name","value","currentTarget","color","marginTop","margin","textAlign","marginLeft","console","USER_COLOR"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from \"react\";\nimport { render } from \"react-dom\";\nimport {Link} from \"@reach/router\";\nimport {auth, signInWithGoogle, generateUserDocument} from \"../firebase\";\nimport './SignUp.css';\nimport setBackgroundColor from \"../utils/setBackground\";\nimport * as colors from \"../colors\";\n\nconst SignUp = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [displayName, setDisplayName] = useState(\"\");\n    const [error, setError] = useState(null);\n\n    const createUserWithEmailAndPasswordHandler = async (event, email, password) => {\n        event.preventDefault();\n        try {\n            const {user} = await auth.createUserWithEmailAndPassword(email, password);\n            generateUserDocument(user, {displayName});\n        } catch (error) {\n            setError('Error Signing up with email and password');\n        }\n\n        setEmail(\"\");\n        setPassword(\"\");\n        setDisplayName(\"\");\n    };\n\n    const onChangeHandler = event => {\n        const {name, value} = event.currentTarget;\n\n        if (name === \"userEmail\") {\n            setEmail(value);\n        } else if (name === \"userPassword\") {\n            setPassword(value);\n        } else if (name === \"displayName\") {\n            setDisplayName(value);\n        }\n    };\n\n    return (\n        <div className=\"container justify-content-center\">\n            <img src='/pages/signup.png' className=\"background-image\" alt=\"login\"/>\n            <span style={{color: '#fff',marginTop:20}}>Sign Up</span>\n            <div className=\"signup-input\">\n                {error !== null && (\n                    <div>\n                        {error}\n                    </div>\n                )}\n                <form>\n                    <label htmlFor=\"displayName\" style={{color: '#fff'}}>\n                        Display Name:\n                    </label>\n                    <input\n                        type=\"text\"\n                        style={{margin:10}}\n                        name=\"displayName\"\n                        value={displayName}\n                        placeholder=\"E.g: Johnny\"\n                        id=\"displayName\"\n                        onChange={event => onChangeHandler(event)}\n                    />\n                    <br />\n                     <label htmlFor=\"userEmail\" className=\"email\">\n                        Email:\n                    </label>\n                    <input\n                        style={{margin:10}}\n                        type=\"email\"\n                        name=\"userEmail\"\n                        value={email}\n                        placeholder=\"E.g: example@example.com\"\n                        id=\"userEmail\"\n                        onChange={event => onChangeHandler(event)}\n                    />\n                    <br />\n                    <label htmlFor=\"userPassword\" className=\"pwd\" style={{color: '#fff'}}>\n                        Password:\n                    </label>\n                    <input\n                        style={{margin:10}}\n                        type=\"password\"\n                        name=\"userPassword\"\n                        value={password}\n                        placeholder=\"Your Password\"\n                        id=\"userPassword\"\n                        onChange={event => onChangeHandler(event)}\n                    />\n                    <br /><br />\n                    <button\n                        className=\"signup-button\"\n                        onClick={event => {\n                            createUserWithEmailAndPasswordHandler(event, email, password);\n                        }}\n                    >\n                        Sign up\n                    </button>\n                </form>\n                <p style={{textAlign:\"center\",color: '#fff'}}>\n                    Or if you have a Google Email Account...</p>\n                <button style={{marginLeft:90}}\n                    onClick={() => {\n                        try {\n                            signInWithGoogle();\n                        } catch (error) {\n                            console.error(\"Error signing in with Google\", error);\n                        }\n                    }}\n                >\n                    Sign In with Google\n                </button>\n                <p style={{color: '#fff'}}>\n                    Already have an account?{\" \"}\n                    <Link to=\"/signIn\" onClick={setBackgroundColor(colors.USER_COLOR)} style={{color: '#FFF'}}>\n                        Sign in here\n                    </Link>{\" \"}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}