{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBc_V0VuIybwBTqanNp5BJ_uJW4xehNIpY\",\n  authDomain: \"mit-btp-2-t-20.firebaseapp.com\",\n  databaseURL: \"https://mit-btp-2-t-20.firebaseio.com\",\n  projectId: \"mit-btp-2-t-20\",\n  storageBucket: \"mit-btp-2-t-20.appspot.com\",\n  messagingSenderId: \"530775460534\",\n  appId: \"1:530775460534:web:242dc509a7742ed2377417\",\n  measurementId: \"G-C8WTL8N9Y7\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email,\n      displayName,\n      photoURL\n    } = user;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};","map":{"version":3,"sources":["/Users/alexwassel/Desktop/HealthHacks/src/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","generateUserDocument","user","additionalData","userRef","doc","uid","snapshot","get","exists","email","displayName","photoURL","set","error","console","getUserDocument","userDocument","data"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,gCAFO;AAGnBC,EAAAA,WAAW,EAAE,uCAHM;AAInBC,EAAAA,SAAS,EAAE,gBAJQ;AAKnBC,EAAAA,aAAa,EAAE,4BALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB,C,CAWA;;AACAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AAEA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,MAAMC,QAAQ,GAAG,IAAIb,QAAQ,CAACW,IAAT,CAAcG,kBAAlB,EAAjB;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClCJ,EAAAA,IAAI,CAACK,eAAL,CAAqBH,QAArB;AACH,CAFM;AAIP,OAAO,MAAMI,oBAAoB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AAChE,MAAI,CAACD,IAAL,EAAW;AAEX,QAAME,OAAO,GAAGR,SAAS,CAACS,GAAV,CAAe,SAAQH,IAAI,CAACI,GAAI,EAAhC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,QAAmCV,IAAzC;;AACA,QAAI;AACA,YAAME,OAAO,CAACS,GAAR,CAAY;AACdF,QAAAA,WADc;AAEdD,QAAAA,KAFc;AAGdE,QAAAA,QAHc;AAId,WAAGT;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOW,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACH;AACJ;;AACD,SAAOE,eAAe,CAACd,IAAI,CAACI,GAAN,CAAtB;AACH,CApBM;;AAsBP,MAAMU,eAAe,GAAG,MAAMV,GAAN,IAAa;AACjC,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;;AACV,MAAI;AACA,UAAMW,YAAY,GAAG,MAAMrB,SAAS,CAACS,GAAV,CAAe,SAAQC,GAAI,EAA3B,EAA8BE,GAA9B,EAA3B;AAEA,WAAO;AACHF,MAAAA,GADG;AAEH,SAAGW,YAAY,CAACC,IAAb;AAFA,KAAP;AAIH,GAPD,CAOE,OAAOJ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH;AACJ,CAZD","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBc_V0VuIybwBTqanNp5BJ_uJW4xehNIpY\",\n    authDomain: \"mit-btp-2-t-20.firebaseapp.com\",\n    databaseURL: \"https://mit-btp-2-t-20.firebaseio.com\",\n    projectId: \"mit-btp-2-t-20\",\n    storageBucket: \"mit-btp-2-t-20.appspot.com\",\n    messagingSenderId: \"530775460534\",\n    appId: \"1:530775460534:web:242dc509a7742ed2377417\",\n    measurementId: \"G-C8WTL8N9Y7\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n    auth.signInWithPopup(provider);\n};\n\nexport const generateUserDocument = async (user, additionalData) => {\n    if (!user) return;\n\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n\n    if (!snapshot.exists) {\n        const { email, displayName, photoURL } = user;\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                photoURL,\n                ...additionalData\n            });\n        } catch (error) {\n            console.error(\"Error creating user document\", error);\n        }\n    }\n    return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n    if (!uid) return null;\n    try {\n        const userDocument = await firestore.doc(`users/${uid}`).get();\n\n        return {\n            uid,\n            ...userDocument.data()\n        };\n    } catch (error) {\n        console.error(\"Error fetching user\", error);\n    }\n};"]},"metadata":{},"sourceType":"module"}