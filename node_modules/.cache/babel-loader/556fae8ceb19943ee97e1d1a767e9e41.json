{"ast":null,"code":"var _jsxFileName = \"/Users/alexwassel/Desktop/HealthHacks/src/Pages/PasswordReset.js\";\nimport React, { useState, useContext } from \"react\";\nimport { auth } from \"../firebase\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { Link } from \"@reach/router\";\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n  const [error, setError] = useState(null);\n\n  const onChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n\n    if (name === \"userEmail\") {\n      setEmail(value);\n    }\n  };\n\n  const sendResetEmail = event => {\n    event.preventDefault();\n    auth.sendPasswordResetEmail(email).then(() => {\n      setEmailHasBeenSent(true);\n      setTimeout(() => {\n        setEmailHasBeenSent(false);\n      }, 3000);\n    }).catch(() => {\n      setError(\"Error resetting password\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Reset your Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, emailHasBeenSent && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"An email has been sent to you!\"), error !== null && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, error), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"userEmail\",\n    id: \"userEmail\",\n    value: email,\n    placeholder: \"Input your email\",\n    onChange: onChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => {\n      sendResetEmail(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Send me a reset link\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"signIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"\\u2190 back to sign in page\")));\n};\n\nexport default PasswordReset;","map":{"version":3,"sources":["/Users/alexwassel/Desktop/HealthHacks/src/Pages/PasswordReset.js"],"names":["React","useState","useContext","auth","UserContext","Link","PasswordReset","email","setEmail","emailHasBeenSent","setEmailHasBeenSent","error","setError","onChangeHandler","event","name","value","currentTarget","sendResetEmail","preventDefault","sendPasswordResetEmail","then","setTimeout","catch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,IAAR,QAAmB,aAAnB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,IAAR,QAAmB,eAAnB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMY,eAAe,GAAGC,KAAK,IAAI;AAC7B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,aAA5B;;AAEA,QAAIF,IAAI,KAAK,WAAb,EAA0B;AACtBP,MAAAA,QAAQ,CAACQ,KAAD,CAAR;AACH;AACJ,GAND;;AAQA,QAAME,cAAc,GAAGJ,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACK,cAAN;AACAhB,IAAAA,IAAI,CACCiB,sBADL,CAC4Bb,KAD5B,EAEKc,IAFL,CAEU,MAAM;AACRX,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAY,MAAAA,UAAU,CAAC,MAAM;AACbZ,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAPL,EAQKa,KARL,CAQW,MAAM;AACTX,MAAAA,QAAQ,CAAC,0BAAD,CAAR;AACH,KAVL;AAWH,GAbD;;AAcA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,gBAAgB,iBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFR,EAMKE,KAAK,KAAK,IAAV,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,CAPR,eAWI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAcI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,WAFT;AAGI,IAAA,EAAE,EAAC,WAHP;AAII,IAAA,KAAK,EAAEJ,KAJX;AAKI,IAAA,WAAW,EAAC,kBALhB;AAMI,IAAA,QAAQ,EAAEM,eANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAuBI;AAEI,IAAA,OAAO,EAAEC,KAAK,IAAI;AACdI,MAAAA,cAAc,CAACJ,KAAD,CAAd;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAvBJ,CADJ,eAkCI,oBAAC,IAAD;AACI,IAAA,EAAE,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAlCJ,CAJJ,CADJ;AA+CH,CA1ED;;AA2EA,eAAeR,aAAf","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport {auth} from \"../firebase\";\nimport {UserContext} from \"../providers/UserProvider\";\nimport {Link} from \"@reach/router\";\n\nconst PasswordReset = () => {\n    const [email, setEmail] = useState(\"\");\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n    const [error, setError] = useState(null);\n\n    const onChangeHandler = event => {\n        const {name, value} = event.currentTarget;\n\n        if (name === \"userEmail\") {\n            setEmail(value);\n        }\n    };\n\n    const sendResetEmail = event => {\n        event.preventDefault();\n        auth\n            .sendPasswordResetEmail(email)\n            .then(() => {\n                setEmailHasBeenSent(true);\n                setTimeout(() => {\n                    setEmailHasBeenSent(false)\n                }, 3000);\n            })\n            .catch(() => {\n                setError(\"Error resetting password\");\n            });\n    };\n    return (\n        <div>\n            <h1>\n                Reset your Password\n            </h1>\n            <div>\n                <form action=\"\">\n                    {emailHasBeenSent && (\n                        <div>\n                            An email has been sent to you!\n                        </div>\n                    )}\n                    {error !== null && (\n                        <div>\n                            {error}\n                        </div>\n                    )}\n                    <label htmlFor=\"userEmail\">\n                        Email:\n                    </label>\n                    <input\n                        type=\"email\"\n                        name=\"userEmail\"\n                        id=\"userEmail\"\n                        value={email}\n                        placeholder=\"Input your email\"\n                        onChange={onChangeHandler}\n\n                    />\n                    <button\n\n                        onClick={event => {\n                            sendResetEmail(event);\n                        }}\n                    >\n                        Send me a reset link\n                    </button>\n                </form>\n\n                <Link\n                    to=\"signIn\"\n                >\n                    &larr; back to sign in page\n                </Link>\n            </div>\n        </div>\n    );\n};\nexport default PasswordReset;"]},"metadata":{},"sourceType":"module"}